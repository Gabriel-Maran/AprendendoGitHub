=== INICIALIZAÇÃO E CONFIGURAÇÃO ===

git init
- Cria um novo repositório Git local.

git config --global user.email "seu@email.com"
- Define email global para commits.
Exemplo:
git config --global user.email exemplo@gmail.com

git config --global user.name "SeuNome"
- Define nome global para commits.
Exemplo:
git config --global user.name JoaoSilva

=== VERIFICAÇÃO E ATUALIZAÇÃO ===

git status
- Mostra arquivos modificados, preparados ou não rastreados.

git add
- Adiciona alterações para commit:
  * git add .          - Todos os arquivos
  * git add arquivo.txt - Arquivo específico

git commit -m "mensagem"
- Salva as alterações com uma descrição.
Exemplo:
git commit -m "Adiciona menu principal"

git push
- Envia commits para o repositório remoto:
  * Primeiro push: git push -u origin main
  * Demais vezes: git push

=== BRANCHS ===

git branch
- Lista todas as branches locais (* = branch atual).

git branch nova-branch
- Cria uma nova branch.

git checkout branch
- Troca para a branch especificada.
Exemplo:
git checkout desenvolvimento

=== MERGE ===

1. git checkout main
   - Muda para a branch que receberá as alterações

2. git pull origin main
   - Atualiza a branch local com alterações remotas

3. git merge feature-branch
   - Mescla a branch "feature-branch" na branch atual

4. Resolver conflitos (se houver):
   - Edite os arquivos marcados com <<<<<<<, =======, >>>>>>>
   - Após resolver:
     git add .
     git commit -m "Merge da feature-branch"

5. git push origin main
   - Envia as alterações mescladas

=== PULL REQUEST (GITHUB) ===

1. Envie sua branch para o GitHub:
   git push -u origin minha-branch

2. No GitHub:
   - Abra o repositório > aba "Pull Requests"
   - Clique em "New Pull Request"

3. Configure:
   - Base branch: branch de destino (ex: main)
   - Compare branch: sua branch (ex: minha-branch)

4. Revise e crie o PR:
   - Descreva as mudanças
   - Clique em "Create Pull Request"

5. Após revisão e aprovação:
   - Clique em "Merge Pull Request" no GitHub

=== IGNORAR ARQUIVOS ===

1. Crie um arquivo .gitignore:
   touch .gitignore

2. Edite o .gitignore:
   - Adicione pastas/arquivos para ignorar:
     Exemplo:
     node_modules/
     senhas.txt
     *.tmp

=== OUTROS COMANDOS ===

git reflog
- Mostra histórico completo de ações (útil para recuperar commits perdidos)

git reset --hard id_commit
- Volta para um commit específico (substitua id_commit pelo ID real)

git remote add origin URL
- Vincula repositório local a um remoto.
Exemplo:
git remote add origin https://github.com/usuario/repositorio.git

git log --graph
- Mostra histórico de commits com diagrama de branches

=== FLAGS ÚTEIS ===

-m (git commit)
- Define mensagem do commit
Ex: git commit -m "Corrige erro"

-u (git push)
- Vincula branch local ao remoto
Ex: git push -u origin main

-b (git checkout)
- Cria e muda para nova branch
Ex: git checkout -b nova-feature

-f (git push)
- Força envio (USE COM CUIDADO)
Ex: git push -f origin main

-a (git commit)
- Adiciona automaticamente arquivos rastreados
Ex: git commit -a -m "Mensagem"